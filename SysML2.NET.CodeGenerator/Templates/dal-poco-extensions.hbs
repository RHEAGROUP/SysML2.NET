// -------------------------------------------------------------------------------------------------
// <copyright file="{{ this.Name }}Extensions.cs" company="RHEA System S.A.">
//
//   Copyright 2022-2023 RHEA System S.A.
//
//   Licensed under the Apache License, Version 2.0 (the "License");
//   you may not use this file except in compliance with the License.
//   You may obtain a copy of the License at
//
//        http://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.
//
// </copyright>
// ------------------------------------------------------------------------------------------------

// ------------------------------------------------------------------------------------------------
// --------THIS IS AN AUTOMATICALLY GENERATED FILE. ANY MANUAL CHANGES WILL BE OVERWRITTEN!--------
// ------------------------------------------------------------------------------------------------

namespace SysML2.NET.Dal
{
    using System;
    using System.Collections.Concurrent;
    using System.Collections.Generic;
    using System.Linq;

    using Core.POCO;

    /// <summary>
    /// A static class that provides extension methods for the <see cref="{{ this.Name }}"/> class
    /// </summary>
    public static class {{ this.Name }}Extensions
    {
        /// <summary>
        /// Creates a <see cref="Core.DTO.{{ this.Name }}"/> based on the provided POCO
        /// </summary>
        /// <param name="poco">
        /// The subject <see cref="Core.POCO.{{ this.Name }}"/> from which a DTO is to be created
        /// </param>
        /// <returns>
        /// An instance of <see cref="Core.POCO.{{ this.Name }}"/>
        /// </returns>
        public static Core.DTO.{{ this.Name }} ToDto(this Core.POCO.{{ this.Name }} poco)
        {
            var dto = new Core.DTO.{{ this.Name }}();

            dto.Id = poco.Id;
            {{#each this.AllEStructuralFeaturesOrderByName as | structuralFeature |}}
            {{#unless structuralFeature.Derived }}
            {{#unless structuralFeature.Transient }}
            {{#if (StructuralFeature.QueryIsAttribute structuralFeature) }}
                {{#if (StructuralFeature.QueryIsNullable structuralFeature)}}
                    dto.{{ String.PascalCase structuralFeature.Name }} = poco.{{ String.PascalCase structuralFeature.Name }};
                {{else}}
                    dto.{{ String.PascalCase structuralFeature.Name }} = poco.{{ String.PascalCase structuralFeature.Name }};
                {{/if}}
            {{ else if (StructuralFeature.QueryIsReference structuralFeature)}}
                {{#if (StructuralFeature.QueryIsEnumerable structuralFeature)}}
                    dto.{{ String.PascalCase structuralFeature.Name }} = poco.{{ String.PascalCase structuralFeature.Name }}.Select(x => x.Id).ToList();
                {{ else if (StructuralFeature.QueryIsNullable structuralFeature)}}
                    dto.{{ String.PascalCase structuralFeature.Name }} = poco.{{ String.PascalCase structuralFeature.Name }}?.Id;
                {{ else }}
                    dto.{{ String.PascalCase structuralFeature.Name }} = poco.{{ String.PascalCase structuralFeature.Name }}.Id;
                {{/if}}
            {{/if}}
            {{/unless}}
            {{/unless}}
            {{/each}}

            return dto;
        }
    }
}

// ------------------------------------------------------------------------------------------------
// --------THIS IS AN AUTOMATICALLY GENERATED FILE. ANY MANUAL CHANGES WILL BE OVERWRITTEN!--------
// ------------------------------------------------------------------------------------------------
